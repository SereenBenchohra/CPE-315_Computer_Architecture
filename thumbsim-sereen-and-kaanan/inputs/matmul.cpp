// Matrix size
#define MATRIX_SIZE 16

void matmul(int*, int*, int*, unsigned int);
void PrintMat (int *, int);

/* Matrix multiplication: C = A * B. */

#include <stdio.h>

int M[MATRIX_SIZE*MATRIX_SIZE] = {
	-97, -1, -49, -39, -31, -73, 33, 66, 42, -95, -14, -90, 45, 76, -43, 50,
	15, -71, 26, -68, -2, 35, 50, 98, -76, -1, 50, -74, 6, -35, -91, -90, 
	-36, 58, 69, -68, -15, -97, -1, 27, 7, -16, -62, 53, 60, 93, -95, 76, 
	22, -69, 7, 19, -34, 57, -82, 89, 56, -32, 15, 63, -67, -76, -27, 95, 
	-18, 41, 26, -33, -55, 25, -5, -48, 8, -68, 5, 69, 24, -90, -54, 47, 
	39, -47, 67, 5, 10, -15, 95, 67, -47, -89, -68, 84, 33, -96, -20, 15, 
	-54, 6, -17, 90, 31, -23, 42, 40, -91, 47, -89, -66, -43, 55, -19, -3, 
	8, 47, 1, 19, 32, 96, 86, -15, 7, 17, 69, 41, -78, 49, 56, 66, 
	56, 39, -42, 87, 15, 0, -71, -75, 46, 38, 57, 3, 93, 37, 0, -97, 
	85, 1, -78, -82, 98, 8, -97, -94, 25, -28, -53, -52, 21, 3, 13, 77, 
	42, -29, -34, 58, -29, 93, -17, 16, -68, 39, 19, 25, 76, 19, -71, -37, 
	20, 49, 79, -81, 57, -18, 23, 83, -46, -30, 30, -24, -26, 44, 52, 15, 
	15, 17, 73, -14, -89, 55, 2, 42, 95, 21, 68, -27, 41, -3, -65, 61, 
	46, 14, -20, -95, -3, 3, -12, -50, -26, 18, -75, -53, 62, -22, -38, 78, 
	-4, 35, 63, -93, 90, 66, -51, -14, 87, 17, -41, -71, 13, 92, -9, 59, 
	-93, -30, -36, -97, -26, -48, 52, -53, -30, -22, 92, 32, -45, 53, -88, -50};

int N[MATRIX_SIZE*MATRIX_SIZE] = {
	89, -24, 56, -20, 41, 4, -34, -70, 22, -76, 58, 35, 16, 48, 95, -76, 
	18, 59, 25, -8, 10, 78, -62, -19, 55, 30, 13, 10, 84, -74, -39, -26, 
	-99, 16, -46, -57, 21, -80, 71, 43, 43, -70, 78, 59, -21, -25, -17, -3, 
	33, 8, -11, 44, 86, -74, 25, -58, -43, 39, -48, 40, -35, -87, 13, 65, 
	-71, -32, 7, -50, 86, 78, -7, -70, 8, 71, -11, -13, 46, -28, -16, 80, 
	-20, -28, -75, 65, 97, -49, 7, 53, -10, -40, 94, -45, 71, -91, 19, 0, 
	75, 27, -50, -38, -94, -57, 90, -85, 14, 79, -98, 60, 50, 85, -59, 29, 
	56, 65, 95, -45, 16, -97, 8, 6, 61, -97, -39, -66, 11, -19, -67, 86, 
	7, 82, 47, -86, 24, -61, 27, 38, 17, -70, 99, 67, 14, 40, 97, 70, 
	-93, -6, 25, -77, 96, 33, -71, -41, -63, 89, 91, -52, 69, 24, 33, 76, 
	-93, 81, -10, -69, 19, 17, -30, 37, -53, 69, -94, -39, -90, 2, 31, 15, 
	-3, 56, -61, 92, 90, 66, 50, 27, -43, -58, -25, 25, -34, 8, -98, 72, 
	90, 91, 2, -89, -91, -27, -52, 54, 41, 52, 15, -48, 55, 46, -33, 51, 
	-96, -95, -56, -5, -28, -5, 21, -72, -64, -3, -46, -98, 4, 54, -26, 95, 
	-53, -23, 5, 54, -50, -47, -90, -9, 5, -74, -58, 60, -27, -91, -87, 76, 
	13, 55, 70, -14, 49, 92, -86, -14, 88, 66, 87, 93, -78, 60, -11, 67};

int P[MATRIX_SIZE*MATRIX_SIZE] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
////////////////////////////////////////////////////////////////////////////////
// Program main
////////////////////////////////////////////////////////////////////////////////
int main(int argc, char** argv) {

	unsigned int width = MATRIX_SIZE;
	// Matrices for the program

	matmul(P, M, N, width);

	PrintMat(P, width);

	return 0;
}

void PrintMat (int *P, int width) {
	/*** Print results ***/
	fprintf(stderr,"Printing Result Matrix:\n");
	for (unsigned int i=0; i<width; i++)
	{
		for (unsigned int j=0; j<width; j++) 
			fprintf(stdout, "%d ", P[i*width+j]);
		fprintf(stdout, "\n"); 
	}
	fprintf(stderr,"******************************************************\n");
	fprintf(stderr,"Done.\n");
}

////////////////////////////////////////////////////////////////////////////////
//! C = A * B
//! @param C          result matrix
//! @param A          matrix A 
//! @param B          matrix B
//! @param width      width and height of all matrices
////////////////////////////////////////////////////////////////////////////////

void matmul(int* C, int* A, int* B, unsigned int width) 
{
	for (unsigned int i = 0; i < width; ++i)
		for (unsigned int j = 0; j < width; ++j) {
			int sum = 0;
			for (unsigned int k = 0; k < width; ++k) {
				sum += A[i * width + k] * B[k * width + j];
			}
			C[i * width + j] = sum;
		}
}

